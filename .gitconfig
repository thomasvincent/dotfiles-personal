# Global Git Configuration
# Author: Thomas Vincent
# Date: 2024-04-19
# Repository: https://github.com/thomasvincent/dotifles-personal
# License: MIT License
#
# This configuration enhances the Git experience by integrating security features like commit signing,
# optimizing common command aliases for efficiency, and providing advanced merge capabilities. It is designed
# to support both individual workflows and team collaborations, with settings that enforce best practices and maintain
# consistency across projects.

### Core User Settings
[user]
    name = Your Full Name     # Set your full name here for commit authorship
    email = your_email@example.com     # Set your email here for commit authorship
    signingkey = <your-key-id>     # GPG key ID for signing commits

### Security Settings
[commit]
    gpgsign = true     # Automatically sign all commits to verify author identity

### Aliases for Efficiency and Convenience
[alias]
    # Basic Git operations
    st = status     # Shortcut for 'git status'
    co = checkout     # Shortcut for 'git checkout'
    ci = commit     # Shortcut for 'git commit'
    br = branch     # Shortcut for 'git branch'

    # Advanced Git operations
    amend = commit --amend     # Quickly amend the last commit
    pr = push origin HEAD     # Push the current branch to the origin

### Custom Merge Strategy
[merge "customDriver"]
    name = Custom Merge Strategy     # Descriptive name for the custom merge strategy
    driver = path/to/your/merge/script.sh     # Path to the merge script

### Diff Settings
[diff]
    algorithm = histogram     # Set the diff algorithm to 'histogram' for improved diff output

### External Scripts and Hooks
[core]
    hooksPath = .githooks     # Directory for storing custom Git hooks

### UI Enhancements
[color]
    ui = auto     # Enable colored output for Git commands in the CLI

### Additional Configuration Files
[include]
    path = .gitconfig-theme     # Include theme-specific Git settings

### Global Ignore File
[core]
    excludesfile = ~/.gitignore_global     # Global .gitignore file to exclude files and directories universally

### Collaboration and Workflow Settings
[pull]
    rebase = true     # Use rebase as the default strategy for 'git pull'

### Advanced Configuration
# Uncomment the following lines as needed for your specific use case.
# [rerere]
#     enabled = true     # Enable reuse of recorded resolution of conflicts

### Plugin and Extension Management
[include]
    path = .gitconfig-extensions     # Include additional Git configurations and extensions

### Notes on Usage
# This configuration file is optimized for use across multiple environments and is adaptable to various workflows.
# Adjust the settings as needed to fit project-specific or team-specific requirements.
